// protoc -I . -I dms/v1 --go_out=plugins=grpc:%GOPATH%/src/ dms/v1/dms.proto
// protoc -I . -I dms/v1 --go_out=plugins=grpc:$GOPATH/src/ dms/v1/dms.proto
// protoc -IC:\Users\mossila\AppData\Local\ -I. -I%GOPATH%\src -I%GOPATH%\src\github.com\grpc-ecosystem\grpc-gateway\third_party\googleapis --go_out=plugins=grpc:. test-grpc.proto

// protoc -I . -I dms/v1 -I /usr/local/include -I $GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --go_out=plugins=grpc:$GOPATH/src/ dms/v1/dms.proto
// protoc -I . -I dms/v1 -I /usr/local/include -I $GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --grpc-gateway_out=logtostderr=true:$GOPATH/src/ dms/v1/dms.proto


syntax = "proto3";

package oswee.dms.v1;

option go_package = "github.com/oswee/stubs/dms/v1";

// Import path should be relative to repository root
// import "protobuf.proto";
// https://github.com/dhrp/grpc-rest-go-example/blob/master/echo-proto/service.proto
// import "github.com/googleapis/googleapis/google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

service ShippingCommandService {
    rpc CreateDeliveryOrder(CreateDeliveryOrderRequest) returns (DeliveryOrder);
    rpc UpdateDeliveryOrder(UpdateDeliveryOrderRequest) returns (DeliveryOrder);
    rpc DeleteDeliveryOrder(DeleteDeliveryOrderRequest) returns (google.protobuf.Empty);
    rpc GeoCodeDeliveryOrder(GeoCodeDeliveryOrderRequest) returns (DeliveryOrder);
}

service ShippingQueryService {
    rpc ListDeliveryOrders(ListDeliveryOrdersRequest) returns (ListDeliveryOrdersResponse) {
        option (google.api.http) = {
            get: "/orders/1"
        };
    }
}

message CreateDeliveryOrderRequest {
    DeliveryOrder delivery_order = 1;
}

message ListDeliveryOrdersRequest {
    int64 stakeholder_id = 1;
    int32 page_number = 2;
    int32 result_per_page = 3;
}

message ListDeliveryOrdersResponse {
    repeated DeliveryOrder delivery_orders = 1;
}

message UpdateDeliveryOrderRequest {
    DeliveryOrder delivery_order = 1;
}

message DeleteDeliveryOrderRequest {
    int64 id = 1;
}

message GeoCodeDeliveryOrderRequest {
    int64 id = 1;
    int64 stakeholder_id = 2;
    string address = 3;
}

message DeliveryOrder {
    int64 id = 1;
    int64 stakeholder_id = 2;
    string reference = 3;
    string destination_address = 4;
    string destination_zip = 5;
    double destination_lat = 6;
    double destination_lng = 7;
    double total_weight = 8;
    int64 routing_sequence = 9;
    string uuid = 10;
}